// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ops_interface.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ops_5finterface_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ops_5finterface_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ops_5finterface_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ops_5finterface_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ops_5finterface_2eproto;
namespace ops {
class ops_cell_conf;
class ops_cell_confDefaultTypeInternal;
extern ops_cell_confDefaultTypeInternal _ops_cell_conf_default_instance_;
class ops_input;
class ops_inputDefaultTypeInternal;
extern ops_inputDefaultTypeInternal _ops_input_default_instance_;
class ops_output;
class ops_outputDefaultTypeInternal;
extern ops_outputDefaultTypeInternal _ops_output_default_instance_;
class ops_ue_input;
class ops_ue_inputDefaultTypeInternal;
extern ops_ue_inputDefaultTypeInternal _ops_ue_input_default_instance_;
class ops_ue_output;
class ops_ue_outputDefaultTypeInternal;
extern ops_ue_outputDefaultTypeInternal _ops_ue_output_default_instance_;
}  // namespace ops
PROTOBUF_NAMESPACE_OPEN
template<> ::ops::ops_cell_conf* Arena::CreateMaybeMessage<::ops::ops_cell_conf>(Arena*);
template<> ::ops::ops_input* Arena::CreateMaybeMessage<::ops::ops_input>(Arena*);
template<> ::ops::ops_output* Arena::CreateMaybeMessage<::ops::ops_output>(Arena*);
template<> ::ops::ops_ue_input* Arena::CreateMaybeMessage<::ops::ops_ue_input>(Arena*);
template<> ::ops::ops_ue_output* Arena::CreateMaybeMessage<::ops::ops_ue_output>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ops {

// ===================================================================

class ops_cell_conf PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ops.ops_cell_conf) */ {
 public:
  inline ops_cell_conf() : ops_cell_conf(nullptr) {};
  virtual ~ops_cell_conf();

  ops_cell_conf(const ops_cell_conf& from);
  ops_cell_conf(ops_cell_conf&& from) noexcept
    : ops_cell_conf() {
    *this = ::std::move(from);
  }

  inline ops_cell_conf& operator=(const ops_cell_conf& from) {
    CopyFrom(from);
    return *this;
  }
  inline ops_cell_conf& operator=(ops_cell_conf&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ops_cell_conf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ops_cell_conf* internal_default_instance() {
    return reinterpret_cast<const ops_cell_conf*>(
               &_ops_cell_conf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ops_cell_conf& a, ops_cell_conf& b) {
    a.Swap(&b);
  }
  inline void Swap(ops_cell_conf* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ops_cell_conf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ops_cell_conf* New() const final {
    return CreateMaybeMessage<ops_cell_conf>(nullptr);
  }

  ops_cell_conf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ops_cell_conf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ops_cell_conf& from);
  void MergeFrom(const ops_cell_conf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ops_cell_conf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ops.ops_cell_conf";
  }
  protected:
  explicit ops_cell_conf(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ops_5finterface_2eproto);
    return ::descriptor_table_ops_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCellIdFieldNumber = 1,
    kNPrbFieldNumber = 2,
    kTtiDurationFieldNumber = 3,
  };
  // uint32 cell_id = 1;
  void clear_cell_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_id() const;
  void set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_id() const;
  void _internal_set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 n_prb = 2;
  void clear_n_prb();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_prb() const;
  void set_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_prb() const;
  void _internal_set_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 tti_duration = 3;
  void clear_tti_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 tti_duration() const;
  void set_tti_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tti_duration() const;
  void _internal_set_tti_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ops.ops_cell_conf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_prb_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tti_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ops_5finterface_2eproto;
};
// -------------------------------------------------------------------

class ops_ue_input PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ops.ops_ue_input) */ {
 public:
  inline ops_ue_input() : ops_ue_input(nullptr) {};
  virtual ~ops_ue_input();

  ops_ue_input(const ops_ue_input& from);
  ops_ue_input(ops_ue_input&& from) noexcept
    : ops_ue_input() {
    *this = ::std::move(from);
  }

  inline ops_ue_input& operator=(const ops_ue_input& from) {
    CopyFrom(from);
    return *this;
  }
  inline ops_ue_input& operator=(ops_ue_input&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ops_ue_input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ops_ue_input* internal_default_instance() {
    return reinterpret_cast<const ops_ue_input*>(
               &_ops_ue_input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ops_ue_input& a, ops_ue_input& b) {
    a.Swap(&b);
  }
  inline void Swap(ops_ue_input* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ops_ue_input* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ops_ue_input* New() const final {
    return CreateMaybeMessage<ops_ue_input>(nullptr);
  }

  ops_ue_input* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ops_ue_input>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ops_ue_input& from);
  void MergeFrom(const ops_ue_input& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ops_ue_input* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ops.ops_ue_input";
  }
  protected:
  explicit ops_ue_input(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ops_5finterface_2eproto);
    return ::descriptor_table_ops_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHtsFieldNumber = 2,
    kRntiFieldNumber = 1,
    kAlphaFieldNumber = 3,
  };
  // .google.protobuf.Timestamp hts = 2;
  bool has_hts() const;
  private:
  bool _internal_has_hts() const;
  public:
  void clear_hts();
  const PROTOBUF_NAMESPACE_ID::Timestamp& hts() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_hts();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_hts();
  void set_allocated_hts(PROTOBUF_NAMESPACE_ID::Timestamp* hts);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_hts() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_hts();
  public:
  void unsafe_arena_set_allocated_hts(
      PROTOBUF_NAMESPACE_ID::Timestamp* hts);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_hts();

  // uint32 rnti = 1;
  void clear_rnti();
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti() const;
  void set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rnti() const;
  void _internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float alpha = 3;
  void clear_alpha();
  float alpha() const;
  void set_alpha(float value);
  private:
  float _internal_alpha() const;
  void _internal_set_alpha(float value);
  public:

  // @@protoc_insertion_point(class_scope:ops.ops_ue_input)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Timestamp* hts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti_;
  float alpha_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ops_5finterface_2eproto;
};
// -------------------------------------------------------------------

class ops_input PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ops.ops_input) */ {
 public:
  inline ops_input() : ops_input(nullptr) {};
  virtual ~ops_input();

  ops_input(const ops_input& from);
  ops_input(ops_input&& from) noexcept
    : ops_input() {
    *this = ::std::move(from);
  }

  inline ops_input& operator=(const ops_input& from) {
    CopyFrom(from);
    return *this;
  }
  inline ops_input& operator=(ops_input&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ops_input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ops_input* internal_default_instance() {
    return reinterpret_cast<const ops_input*>(
               &_ops_input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ops_input& a, ops_input& b) {
    a.Swap(&b);
  }
  inline void Swap(ops_input* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ops_input* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ops_input* New() const final {
    return CreateMaybeMessage<ops_input>(nullptr);
  }

  ops_input* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ops_input>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ops_input& from);
  void MergeFrom(const ops_input& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ops_input* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ops.ops_input";
  }
  protected:
  explicit ops_input(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ops_5finterface_2eproto);
    return ::descriptor_table_ops_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUeInputFieldNumber = 2,
    kTtiFieldNumber = 1,
  };
  // repeated .ops.ops_ue_input ue_input = 2;
  int ue_input_size() const;
  private:
  int _internal_ue_input_size() const;
  public:
  void clear_ue_input();
  ::ops::ops_ue_input* mutable_ue_input(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_input >*
      mutable_ue_input();
  private:
  const ::ops::ops_ue_input& _internal_ue_input(int index) const;
  ::ops::ops_ue_input* _internal_add_ue_input();
  public:
  const ::ops::ops_ue_input& ue_input(int index) const;
  ::ops::ops_ue_input* add_ue_input();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_input >&
      ue_input() const;

  // uint64 tti = 1;
  void clear_tti();
  ::PROTOBUF_NAMESPACE_ID::uint64 tti() const;
  void set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tti() const;
  void _internal_set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ops.ops_input)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_input > ue_input_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tti_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ops_5finterface_2eproto;
};
// -------------------------------------------------------------------

class ops_ue_output PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ops.ops_ue_output) */ {
 public:
  inline ops_ue_output() : ops_ue_output(nullptr) {};
  virtual ~ops_ue_output();

  ops_ue_output(const ops_ue_output& from);
  ops_ue_output(ops_ue_output&& from) noexcept
    : ops_ue_output() {
    *this = ::std::move(from);
  }

  inline ops_ue_output& operator=(const ops_ue_output& from) {
    CopyFrom(from);
    return *this;
  }
  inline ops_ue_output& operator=(ops_ue_output&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ops_ue_output& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ops_ue_output* internal_default_instance() {
    return reinterpret_cast<const ops_ue_output*>(
               &_ops_ue_output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ops_ue_output& a, ops_ue_output& b) {
    a.Swap(&b);
  }
  inline void Swap(ops_ue_output* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ops_ue_output* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ops_ue_output* New() const final {
    return CreateMaybeMessage<ops_ue_output>(nullptr);
  }

  ops_ue_output* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ops_ue_output>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ops_ue_output& from);
  void MergeFrom(const ops_ue_output& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ops_ue_output* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ops.ops_ue_output";
  }
  protected:
  explicit ops_ue_output(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ops_5finterface_2eproto);
    return ::descriptor_table_ops_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRntiFieldNumber = 1,
    kTxFieldNumber = 2,
  };
  // uint32 rnti = 1;
  void clear_rnti();
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti() const;
  void set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rnti() const;
  void _internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool tx = 2;
  void clear_tx();
  bool tx() const;
  void set_tx(bool value);
  private:
  bool _internal_tx() const;
  void _internal_set_tx(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ops.ops_ue_output)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti_;
  bool tx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ops_5finterface_2eproto;
};
// -------------------------------------------------------------------

class ops_output PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ops.ops_output) */ {
 public:
  inline ops_output() : ops_output(nullptr) {};
  virtual ~ops_output();

  ops_output(const ops_output& from);
  ops_output(ops_output&& from) noexcept
    : ops_output() {
    *this = ::std::move(from);
  }

  inline ops_output& operator=(const ops_output& from) {
    CopyFrom(from);
    return *this;
  }
  inline ops_output& operator=(ops_output&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ops_output& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ops_output* internal_default_instance() {
    return reinterpret_cast<const ops_output*>(
               &_ops_output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ops_output& a, ops_output& b) {
    a.Swap(&b);
  }
  inline void Swap(ops_output* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ops_output* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ops_output* New() const final {
    return CreateMaybeMessage<ops_output>(nullptr);
  }

  ops_output* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ops_output>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ops_output& from);
  void MergeFrom(const ops_output& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ops_output* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ops.ops_output";
  }
  protected:
  explicit ops_output(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ops_5finterface_2eproto);
    return ::descriptor_table_ops_5finterface_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUeOutputFieldNumber = 2,
    kTtiFieldNumber = 1,
  };
  // repeated .ops.ops_ue_output ue_output = 2;
  int ue_output_size() const;
  private:
  int _internal_ue_output_size() const;
  public:
  void clear_ue_output();
  ::ops::ops_ue_output* mutable_ue_output(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_output >*
      mutable_ue_output();
  private:
  const ::ops::ops_ue_output& _internal_ue_output(int index) const;
  ::ops::ops_ue_output* _internal_add_ue_output();
  public:
  const ::ops::ops_ue_output& ue_output(int index) const;
  ::ops::ops_ue_output* add_ue_output();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_output >&
      ue_output() const;

  // uint64 tti = 1;
  void clear_tti();
  ::PROTOBUF_NAMESPACE_ID::uint64 tti() const;
  void set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tti() const;
  void _internal_set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ops.ops_output)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_output > ue_output_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tti_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ops_5finterface_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ops_cell_conf

// uint32 cell_id = 1;
inline void ops_cell_conf::clear_cell_id() {
  cell_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::_internal_cell_id() const {
  return cell_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::cell_id() const {
  // @@protoc_insertion_point(field_get:ops.ops_cell_conf.cell_id)
  return _internal_cell_id();
}
inline void ops_cell_conf::_internal_set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cell_id_ = value;
}
inline void ops_cell_conf::set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cell_id(value);
  // @@protoc_insertion_point(field_set:ops.ops_cell_conf.cell_id)
}

// uint32 n_prb = 2;
inline void ops_cell_conf::clear_n_prb() {
  n_prb_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::_internal_n_prb() const {
  return n_prb_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::n_prb() const {
  // @@protoc_insertion_point(field_get:ops.ops_cell_conf.n_prb)
  return _internal_n_prb();
}
inline void ops_cell_conf::_internal_set_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_prb_ = value;
}
inline void ops_cell_conf::set_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_prb(value);
  // @@protoc_insertion_point(field_set:ops.ops_cell_conf.n_prb)
}

// uint32 tti_duration = 3;
inline void ops_cell_conf::clear_tti_duration() {
  tti_duration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::_internal_tti_duration() const {
  return tti_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_cell_conf::tti_duration() const {
  // @@protoc_insertion_point(field_get:ops.ops_cell_conf.tti_duration)
  return _internal_tti_duration();
}
inline void ops_cell_conf::_internal_set_tti_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tti_duration_ = value;
}
inline void ops_cell_conf::set_tti_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tti_duration(value);
  // @@protoc_insertion_point(field_set:ops.ops_cell_conf.tti_duration)
}

// -------------------------------------------------------------------

// ops_ue_input

// uint32 rnti = 1;
inline void ops_ue_input::clear_rnti() {
  rnti_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_ue_input::_internal_rnti() const {
  return rnti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_ue_input::rnti() const {
  // @@protoc_insertion_point(field_get:ops.ops_ue_input.rnti)
  return _internal_rnti();
}
inline void ops_ue_input::_internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rnti_ = value;
}
inline void ops_ue_input::set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rnti(value);
  // @@protoc_insertion_point(field_set:ops.ops_ue_input.rnti)
}

// .google.protobuf.Timestamp hts = 2;
inline bool ops_ue_input::_internal_has_hts() const {
  return this != internal_default_instance() && hts_ != nullptr;
}
inline bool ops_ue_input::has_hts() const {
  return _internal_has_hts();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ops_ue_input::_internal_hts() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = hts_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& ops_ue_input::hts() const {
  // @@protoc_insertion_point(field_get:ops.ops_ue_input.hts)
  return _internal_hts();
}
inline void ops_ue_input::unsafe_arena_set_allocated_hts(
    PROTOBUF_NAMESPACE_ID::Timestamp* hts) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hts_);
  }
  hts_ = hts;
  if (hts) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ops.ops_ue_input.hts)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ops_ue_input::release_hts() {
  auto temp = unsafe_arena_release_hts();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ops_ue_input::unsafe_arena_release_hts() {
  // @@protoc_insertion_point(field_release:ops.ops_ue_input.hts)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = hts_;
  hts_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ops_ue_input::_internal_mutable_hts() {
  
  if (hts_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    hts_ = p;
  }
  return hts_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* ops_ue_input::mutable_hts() {
  // @@protoc_insertion_point(field_mutable:ops.ops_ue_input.hts)
  return _internal_mutable_hts();
}
inline void ops_ue_input::set_allocated_hts(PROTOBUF_NAMESPACE_ID::Timestamp* hts) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hts_);
  }
  if (hts) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hts)->GetArena();
    if (message_arena != submessage_arena) {
      hts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hts, submessage_arena);
    }
    
  } else {
    
  }
  hts_ = hts;
  // @@protoc_insertion_point(field_set_allocated:ops.ops_ue_input.hts)
}

// float alpha = 3;
inline void ops_ue_input::clear_alpha() {
  alpha_ = 0;
}
inline float ops_ue_input::_internal_alpha() const {
  return alpha_;
}
inline float ops_ue_input::alpha() const {
  // @@protoc_insertion_point(field_get:ops.ops_ue_input.alpha)
  return _internal_alpha();
}
inline void ops_ue_input::_internal_set_alpha(float value) {
  
  alpha_ = value;
}
inline void ops_ue_input::set_alpha(float value) {
  _internal_set_alpha(value);
  // @@protoc_insertion_point(field_set:ops.ops_ue_input.alpha)
}

// -------------------------------------------------------------------

// ops_input

// uint64 tti = 1;
inline void ops_input::clear_tti() {
  tti_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ops_input::_internal_tti() const {
  return tti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ops_input::tti() const {
  // @@protoc_insertion_point(field_get:ops.ops_input.tti)
  return _internal_tti();
}
inline void ops_input::_internal_set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tti_ = value;
}
inline void ops_input::set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tti(value);
  // @@protoc_insertion_point(field_set:ops.ops_input.tti)
}

// repeated .ops.ops_ue_input ue_input = 2;
inline int ops_input::_internal_ue_input_size() const {
  return ue_input_.size();
}
inline int ops_input::ue_input_size() const {
  return _internal_ue_input_size();
}
inline void ops_input::clear_ue_input() {
  ue_input_.Clear();
}
inline ::ops::ops_ue_input* ops_input::mutable_ue_input(int index) {
  // @@protoc_insertion_point(field_mutable:ops.ops_input.ue_input)
  return ue_input_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_input >*
ops_input::mutable_ue_input() {
  // @@protoc_insertion_point(field_mutable_list:ops.ops_input.ue_input)
  return &ue_input_;
}
inline const ::ops::ops_ue_input& ops_input::_internal_ue_input(int index) const {
  return ue_input_.Get(index);
}
inline const ::ops::ops_ue_input& ops_input::ue_input(int index) const {
  // @@protoc_insertion_point(field_get:ops.ops_input.ue_input)
  return _internal_ue_input(index);
}
inline ::ops::ops_ue_input* ops_input::_internal_add_ue_input() {
  return ue_input_.Add();
}
inline ::ops::ops_ue_input* ops_input::add_ue_input() {
  // @@protoc_insertion_point(field_add:ops.ops_input.ue_input)
  return _internal_add_ue_input();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_input >&
ops_input::ue_input() const {
  // @@protoc_insertion_point(field_list:ops.ops_input.ue_input)
  return ue_input_;
}

// -------------------------------------------------------------------

// ops_ue_output

// uint32 rnti = 1;
inline void ops_ue_output::clear_rnti() {
  rnti_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_ue_output::_internal_rnti() const {
  return rnti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ops_ue_output::rnti() const {
  // @@protoc_insertion_point(field_get:ops.ops_ue_output.rnti)
  return _internal_rnti();
}
inline void ops_ue_output::_internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rnti_ = value;
}
inline void ops_ue_output::set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rnti(value);
  // @@protoc_insertion_point(field_set:ops.ops_ue_output.rnti)
}

// bool tx = 2;
inline void ops_ue_output::clear_tx() {
  tx_ = false;
}
inline bool ops_ue_output::_internal_tx() const {
  return tx_;
}
inline bool ops_ue_output::tx() const {
  // @@protoc_insertion_point(field_get:ops.ops_ue_output.tx)
  return _internal_tx();
}
inline void ops_ue_output::_internal_set_tx(bool value) {
  
  tx_ = value;
}
inline void ops_ue_output::set_tx(bool value) {
  _internal_set_tx(value);
  // @@protoc_insertion_point(field_set:ops.ops_ue_output.tx)
}

// -------------------------------------------------------------------

// ops_output

// uint64 tti = 1;
inline void ops_output::clear_tti() {
  tti_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ops_output::_internal_tti() const {
  return tti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ops_output::tti() const {
  // @@protoc_insertion_point(field_get:ops.ops_output.tti)
  return _internal_tti();
}
inline void ops_output::_internal_set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tti_ = value;
}
inline void ops_output::set_tti(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tti(value);
  // @@protoc_insertion_point(field_set:ops.ops_output.tti)
}

// repeated .ops.ops_ue_output ue_output = 2;
inline int ops_output::_internal_ue_output_size() const {
  return ue_output_.size();
}
inline int ops_output::ue_output_size() const {
  return _internal_ue_output_size();
}
inline void ops_output::clear_ue_output() {
  ue_output_.Clear();
}
inline ::ops::ops_ue_output* ops_output::mutable_ue_output(int index) {
  // @@protoc_insertion_point(field_mutable:ops.ops_output.ue_output)
  return ue_output_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_output >*
ops_output::mutable_ue_output() {
  // @@protoc_insertion_point(field_mutable_list:ops.ops_output.ue_output)
  return &ue_output_;
}
inline const ::ops::ops_ue_output& ops_output::_internal_ue_output(int index) const {
  return ue_output_.Get(index);
}
inline const ::ops::ops_ue_output& ops_output::ue_output(int index) const {
  // @@protoc_insertion_point(field_get:ops.ops_output.ue_output)
  return _internal_ue_output(index);
}
inline ::ops::ops_ue_output* ops_output::_internal_add_ue_output() {
  return ue_output_.Add();
}
inline ::ops::ops_ue_output* ops_output::add_ue_output() {
  // @@protoc_insertion_point(field_add:ops.ops_output.ue_output)
  return _internal_add_ue_output();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ops::ops_ue_output >&
ops_output::ue_output() const {
  // @@protoc_insertion_point(field_list:ops.ops_output.ue_output)
  return ue_output_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ops

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ops_5finterface_2eproto
